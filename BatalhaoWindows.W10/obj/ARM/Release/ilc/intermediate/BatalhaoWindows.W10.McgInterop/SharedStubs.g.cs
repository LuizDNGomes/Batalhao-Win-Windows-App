#define MCG_WINRT_SUPPORTED
using Mcg.System;
using System;
using System.Collections.Generic;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.InteropServices.WindowsRuntime;


// -----------------------------------------------------------------------------------------------------------
// 
// WARNING: THIS SOURCE FILE IS FOR 32-BIT BUILDS ONLY!
// 
// MCG GENERATED CODE
// 
// This C# source file is generated by MCG and is added into the application at compile time to support interop features.
// 
// It has three primary components:
// 
// 1. Public type definitions with interop implementation used by this application including WinRT & COM data structures and P/Invokes.
// 
// 2. The 'McgInterop' class containing marshaling code that acts as a bridge from managed code to native code.
// 
// 3. The 'McgNative' class containing marshaling code and native type definitions that call into native code and are called by native code.
// 
// -----------------------------------------------------------------------------------------------------------
// 
// warning CS0067: The event 'event' is never used
#pragma warning disable 67
// warning CS0169: The field 'field' is never used
#pragma warning disable 169
// warning CS0649: Field 'field' is never assigned to, and will always have its default value 0
#pragma warning disable 414
// warning CS0414: The private field 'field' is assigned but its value is never used
#pragma warning disable 649
// warning CS1591: Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable 1591
// warning CS0108 'member1' hides inherited member 'member2'. Use the new keyword if hiding was intended.
#pragma warning disable 108
// warning CS0114 'member1' hides inherited member 'member2'.  To make the current method override that implementation, add the override keyword. Otherwise add the new keyword.
#pragma warning disable 114
// warning CS0659 'type' overrides Object.Equals but does not override GetHashCode.
#pragma warning disable 659
// warning CS0465 Introducing a 'Finalize' method can interfere with destructor invocation. Did you intend to declare a destructor?
#pragma warning disable 465
// warning CS0028 'function declaration' has the wrong signature to be an entry point
#pragma warning disable 28
// warning CS0162 Unreachable code Detected
#pragma warning disable 162
// warning CS0628 new protected member declared in sealed class
#pragma warning disable 628

namespace McgInterop
{
	internal unsafe static partial class ForwardComSharedStubs
	{
		// Signature, Windows.Foundation.IStringable.ToString, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static string Func_string__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_value__retval = default(global::System.Runtime.InteropServices.HSTRING);
			string value__retval = default(string);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = default(global::System.Runtime.InteropServices.HSTRING);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_value__retval);
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.FreeHString(unsafe_value__retval.handle);
			}
		}

		// Signature, Windows.UI.Xaml.Data.IValueConverter.Convert, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTTypeNameMarshaller] System_Type__Windows_UI_Xaml_Interop__TypeName, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static object Func_object__Type__object__string__object__<TThis>(
					global::System.__ComObject __this, 
					object value, 
					global::System.Type targetType, 
					object parameter, 
					string language, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_value = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::System.Type__Impl.UnsafeType unsafe_targetType;
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_parameter = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::System.Runtime.InteropServices.HSTRING unsafe_language = default(global::System.Runtime.InteropServices.HSTRING);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_result__retval = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			object result__retval = default(object);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(value);
				global::System.Runtime.InteropServices.HSTRING unsafe_targetType__HSTRING__Name;
				int unsafe_targetType__int__Kind;
				global::System.Runtime.InteropServices.McgMarshal.TypeToTypeName(
									targetType, 
									out unsafe_targetType__HSTRING__Name, 
									out unsafe_targetType__int__Kind
								);
				unsafe_targetType.Name = unsafe_targetType__HSTRING__Name;
				unsafe_targetType.Kind = (global::Windows.UI.Xaml.Interop.TypeKind)unsafe_targetType__int__Kind;
				unsafe_parameter = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(parameter);
				fixed (char* pBuffer_language = language)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_language;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_language, language, &(hstring_header_language), &(unsafe_language));
					unsafe_result__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										typeof(TThis).TypeHandle, 
										__targetIndex, 
										unsafe_value, 
										unsafe_targetType, 
										unsafe_parameter, 
										unsafe_language, 
										&(unsafe_result__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					result__retval = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_result__retval));
				}
				// Return
				return result__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_parameter)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_result__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.IApplicationFactory.CreateInstance, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_IntPtr__out_IntPtr__IntPtr__<TThis>(
					global::System.__ComObject __this, 
					global::System.IntPtr baseInterface, 
					out global::System.IntPtr innerInterface, 
					int __targetIndex)
		{
			// Setup
			global::System.IntPtr unsafe_innerInterface;
			global::System.IntPtr unsafe_value__retval;
			global::System.IntPtr value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								baseInterface, 
								&(unsafe_innerInterface), 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			innerInterface = unsafe_innerInterface;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.IApplicationStatics.get_Current, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static TResult Func_TResult__<TThis, TResult>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TResult__retval = default(void*);
			TResult TResult__retval = default(TResult);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_TResult__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									&(unsafe_TResult__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				TResult__retval = (TResult)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_TResult__retval), 
									typeof(TResult).TypeHandle
								);
				// Return
				return TResult__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TResult__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.ApplicationInitializationCallback.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_TArg0__<TThis, TArg0>(
					global::System.__ComObject __this, 
					TArg0 p, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TArg0__arg = default(void*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									p, 
									typeof(TArg0).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_TArg0__arg
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(p);
			}
		}

		// Signature, Windows.UI.Xaml.IApplication.put_RequestedTheme, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller]  -> int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int<TThis>(
					global::System.__ComObject __this, 
					int value, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.IApplication.remove_UnhandledException, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__WindowsRuntime_EventRegistrationToken__<TThis>(
					global::System.__ComObject __this, 
					global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								token
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.IApplication.add_Resuming, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] System_EventHandler_1_object___Windows_Foundation__EventHandler_A_object_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_EventHandler_1_object__WindowsRuntime_EventRegistrationToken__<TThis>(
					global::System.__ComObject __this, 
					global::System.EventHandler<object> handler, 
					int __targetIndex)
		{
			// Setup
			global::System.EventHandler_A_System_Object_V___Impl.Vtbl** unsafe_handler = default(global::System.EventHandler_A_System_Object_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::System.EventHandler_A_System_Object_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::System.EventHandler<object>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget8>(global::System.EventHandler_A_System_Object_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.UI.Xaml.IDependencyObject.GetValue, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static object Func_TArg0__object__<TThis, TArg0>(
					global::System.__ComObject __this, 
					TArg0 dp, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TArg0__arg = default(void*);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_result__retval = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			object result__retval = default(object);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									dp, 
									typeof(TArg0).TypeHandle
								);
				unsafe_result__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_TArg0__arg, 
									&(unsafe_result__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				result__retval = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_result__retval));
				// Return
				return result__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(dp);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_result__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.IDependencyObject.SetValue, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_TArg0__object__<TThis, TArg0>(
					global::System.__ComObject __this, 
					TArg0 dp, 
					object value, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TArg0__arg = default(void*);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_value = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									dp, 
									typeof(TArg0).TypeHandle
								);
				unsafe_value = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(value);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_TArg0__arg, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(dp);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.IDependencyPropertyStatics.Register, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.WinRTTypeNameMarshaller] System_Type__Windows_UI_Xaml_Interop__TypeName, [fwd] [in] [Mcg.CodeGen.WinRTTypeNameMarshaller] System_Type__Windows_UI_Xaml_Interop__TypeName, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static TResult Func_string__Type__Type__TArg0__TResult__<TThis, TArg0, TResult>(
					global::System.__ComObject __this, 
					string name, 
					global::System.Type propertyType, 
					global::System.Type ownerType, 
					TArg0 typeMetadata, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_name = default(global::System.Runtime.InteropServices.HSTRING);
			global::System.Type__Impl.UnsafeType unsafe_propertyType;
			global::System.Type__Impl.UnsafeType unsafe_ownerType;
			void* unsafe_TArg0__arg = default(void*);
			void* unsafe_TResult__retval = default(void*);
			TResult TResult__retval = default(TResult);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_name = name)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_name;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_name, name, &(hstring_header_name), &(unsafe_name));
					global::System.Runtime.InteropServices.HSTRING unsafe_propertyType__HSTRING__Name;
					int unsafe_propertyType__int__Kind;
					global::System.Runtime.InteropServices.McgMarshal.TypeToTypeName(
										propertyType, 
										out unsafe_propertyType__HSTRING__Name, 
										out unsafe_propertyType__int__Kind
									);
					unsafe_propertyType.Name = unsafe_propertyType__HSTRING__Name;
					unsafe_propertyType.Kind = (global::Windows.UI.Xaml.Interop.TypeKind)unsafe_propertyType__int__Kind;
					global::System.Runtime.InteropServices.HSTRING unsafe_ownerType__HSTRING__Name;
					int unsafe_ownerType__int__Kind;
					global::System.Runtime.InteropServices.McgMarshal.TypeToTypeName(
										ownerType, 
										out unsafe_ownerType__HSTRING__Name, 
										out unsafe_ownerType__int__Kind
									);
					unsafe_ownerType.Name = unsafe_ownerType__HSTRING__Name;
					unsafe_ownerType.Kind = (global::Windows.UI.Xaml.Interop.TypeKind)unsafe_ownerType__int__Kind;
					unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										typeMetadata, 
										typeof(TArg0).TypeHandle
									);
					unsafe_TResult__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										typeof(TThis).TypeHandle, 
										__targetIndex, 
										unsafe_name, 
										unsafe_propertyType, 
										unsafe_ownerType, 
										unsafe_TArg0__arg, 
										&(unsafe_TResult__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					TResult__retval = (TResult)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_TResult__retval), 
										typeof(TResult).TypeHandle
									);
				}
				// Return
				return TResult__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(typeMetadata);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TResult__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.PropertyChangedCallback.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [in] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_TArg0__TArg1__<TThis, TArg0, TArg1>(
					global::System.__ComObject __this, 
					TArg0 d, 
					TArg1 e, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TArg0__arg = default(void*);
			void* unsafe_TArg1__arg = default(void*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									d, 
									typeof(TArg0).TypeHandle
								);
				unsafe_TArg1__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(TArg1).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_TArg0__arg, 
									unsafe_TArg1__arg
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(d);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg1__arg)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.IDependencyPropertyChangedEventArgs.get_OldValue, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static object Func_object__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_value__retval = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			object value__retval = default(object);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_value__retval));
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Core.ICoreDispatcher.get_HasThreadAccess, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_bool__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			bool value__retval;
			sbyte unsafe_value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval != 0;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Core.DispatchedHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.IResourceDictionary.get_Source, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTUriMarshaller] System_Uri__Windows_Foundation__Uri, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Uri Func_Uri__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_value__retval = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::System.Uri value__retval = default(global::System.Uri);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					value__retval = global::McgInterop.McgHelpers.WindowsFoundationUri2SystemUri(((global::System.IntPtr)unsafe_value__retval));
				else
					value__retval = null;
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.IResourceDictionary.put_Source, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTUriMarshaller] System_Uri__Windows_Foundation__Uri, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Uri__<TThis>(
					global::System.__ComObject __this, 
					global::System.Uri value, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_value = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			int unsafe___return__;
			try
			{
				// Marshalling
				if (value != null)
					unsafe_value = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::McgInterop.McgHelpers.SystemUri2WindowsFoundationUri(value);
				else
					unsafe_value = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.UnhandledExceptionEventHandler.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__TArg0__<TThis, TArg0>(
					global::System.__ComObject __this, 
					object sender, 
					TArg0 e, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			void* unsafe_TArg0__arg = default(void*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_sender = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(sender);
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									e, 
									typeof(TArg0).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_sender, 
									unsafe_TArg0__arg
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_sender)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(e);
			}
		}

		// Signature, Windows.UI.Xaml.Media.IRectangleGeometry.get_Rect, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Rect Func__Rect__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Rect unsafe_value__retval;
			global::Windows.Foundation.Rect value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Media.IRectangleGeometry.put_Rect, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__Rect__<TThis>(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Rect value, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.IUIElement.get_DesiredSize, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Size__Windows_Foundation__Size, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Size Func__Size__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Size unsafe_value__retval;
			global::Windows.Foundation.Size value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.IUIElement.get_Opacity, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] double__double, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static double Func_double__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			double unsafe_value__retval;
			double value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.IUIElement.put_Opacity, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] double__double, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_double__<TThis>(
					global::System.__ComObject __this, 
					double value, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.IUIElement.put_RenderTransformOrigin, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Point__Windows_Foundation__Point, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc__Point__<TThis>(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Point value, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.IUIElement.put_IsHitTestVisible, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_bool__<TThis>(
					global::System.__ComObject __this, 
					bool value, 
					int __targetIndex)
		{
			// Setup
			sbyte unsafe_value;
			int unsafe___return__;
			// Marshalling
			unsafe_value = (value ? ((sbyte)1) : ((sbyte)0));
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								unsafe_value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.IUIElement.get_Visibility, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Visibility__Windows_UI_Xaml__Visibility, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Visibility Func_UI_Xaml_Visibility__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Visibility unsafe_value__retval;
			global::Windows.UI.Xaml.Visibility value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_KeyUp, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_KeyEventHandler__Windows_UI_Xaml_Input__KeyEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Input_KeyEventHandler___WindowsRuntime_EventRegistrationToken__<TThis>(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.KeyEventHandler handler, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.KeyEventHandler__Impl.Vtbl** unsafe_handler = default(global::Windows.UI.Xaml.Input.KeyEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.UI.Xaml.Input.KeyEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.UI.Xaml.Input.KeyEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget30>(global::Windows.UI.Xaml.Input.KeyEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_GotFocus, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_RoutedEventHandler__Windows_UI_Xaml__RoutedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_RoutedEventHandler___WindowsRuntime_EventRegistrationToken__<TThis>(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.RoutedEventHandler handler, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.RoutedEventHandler__Impl.Vtbl** unsafe_handler = default(global::Windows.UI.Xaml.RoutedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.UI.Xaml.RoutedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.UI.Xaml.RoutedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget31>(global::Windows.UI.Xaml.RoutedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_DragEnter, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_DragEventHandler__Windows_UI_Xaml__DragEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_DragEventHandler___WindowsRuntime_EventRegistrationToken__<TThis>(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.DragEventHandler handler, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.DragEventHandler__Impl.Vtbl** unsafe_handler = default(global::Windows.UI.Xaml.DragEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.UI.Xaml.DragEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.UI.Xaml.DragEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget32>(global::Windows.UI.Xaml.DragEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.UI.Xaml.IUIElement.add_PointerPressed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Input_PointerEventHandler__Windows_UI_Xaml_Input__PointerEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Input_PointerEventHandler___WindowsRuntime_EventRegistrationToken__<TThis>(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Input.PointerEventHandler handler, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Input.PointerEventHandler__Impl.Vtbl** unsafe_handler = default(global::Windows.UI.Xaml.Input.PointerEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.UI.Xaml.Input.PointerEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.UI.Xaml.Input.PointerEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget33>(global::Windows.UI.Xaml.Input.PointerEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.UI.Xaml.Input.IKeyRoutedEventArgs.get_Key, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_System_VirtualKey__Windows_System__VirtualKey, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.System.VirtualKey Func_VirtualKey__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.System.VirtualKey unsafe_value__retval;
			global::Windows.System.VirtualKey value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Input.IPointerRoutedEventArgs.GetCurrentPoint, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static TResult Func_TArg0__TResult__<TThis, TArg0, TResult>(
					global::System.__ComObject __this, 
					TArg0 relativeTo, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TArg0__arg = default(void*);
			void* unsafe_TResult__retval = default(void*);
			TResult TResult__retval = default(TResult);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									relativeTo, 
									typeof(TArg0).TypeHandle
								);
				unsafe_TResult__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_TArg0__arg, 
									&(unsafe_TResult__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				TResult__retval = (TResult)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_TResult__retval), 
									typeof(TResult).TypeHandle
								);
				// Return
				return TResult__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(relativeTo);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TResult__retval)));
			}
		}

		// Signature, Windows.UI.Input.IPointerPointProperties.get_MouseWheelDelta, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Func_int__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			int unsafe_value__retval;
			int value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Input.IManipulationDeltaRoutedEventArgs.get_Delta, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Windows_UI_Input_ManipulationDelta__Windows_UI_Input__ManipulationDelta, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Input.ManipulationDelta Func_UI_Input_ManipulationDelta__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Input.ManipulationDelta unsafe_value__retval;
			global::Windows.UI.Input.ManipulationDelta value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetPatternCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller]  -> int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static object Func_intobject__<TThis>(
					global::System.__ComObject __this, 
					int patternInterface, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_result__retval = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			object result__retval = default(object);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_result__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									patternInterface, 
									&(unsafe_result__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				result__retval = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_result__retval));
				// Return
				return result__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_result__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Automation.Peers.IAutomationPeerOverrides.GetClickablePointCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Point__Windows_Foundation__Point, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Point Func__Point__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Point unsafe_result__retval;
			global::Windows.Foundation.Point result__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_result__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			result__retval = unsafe_result__retval;
			// Return
			return result__retval;
		}

		// Signature, Windows.UI.Xaml.IUIElementOverrides9.PopulatePropertyInfoOverride, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_string__TArg0__<TThis, TArg0>(
					global::System.__ComObject __this, 
					string propertyName, 
					TArg0 animationPropertyInfo, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_propertyName = default(global::System.Runtime.InteropServices.HSTRING);
			void* unsafe_TArg0__arg = default(void*);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_propertyName = propertyName)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_propertyName;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_propertyName, propertyName, &(hstring_header_propertyName), &(unsafe_propertyName));
					unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										animationPropertyInfo, 
										typeof(TArg0).TypeHandle
									);
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										typeof(TThis).TypeHandle, 
										__targetIndex, 
										unsafe_propertyName, 
										unsafe_TArg0__arg
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				}
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(animationPropertyInfo);
			}
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement.put_Tag, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__<TThis>(
					global::System.__ComObject __this, 
					object value, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_value = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_value = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(value);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement.put_Language, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_string__<TThis>(
					global::System.__ComObject __this, 
					string value, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_value = default(global::System.Runtime.InteropServices.HSTRING);
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_value = value)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_value;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_value, value, &(hstring_header_value), &(unsafe_value));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			}
			// Return
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement.get_HorizontalAlignment, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_HorizontalAlignment__Windows_UI_Xaml__HorizontalAlignment, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.HorizontalAlignment Func_UI_Xaml_HorizontalAlignment__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.HorizontalAlignment unsafe_value__retval;
			global::Windows.UI.Xaml.HorizontalAlignment value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement.get_VerticalAlignment, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_VerticalAlignment__Windows_UI_Xaml__VerticalAlignment, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.VerticalAlignment Func_UI_Xaml_VerticalAlignment__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.VerticalAlignment unsafe_value__retval;
			global::Windows.UI.Xaml.VerticalAlignment value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement.get_Margin, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_Thickness__Windows_UI_Xaml__Thickness, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Thickness Func_UI_Xaml_Thickness__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Thickness unsafe_value__retval;
			global::Windows.UI.Xaml.Thickness value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement.put_Margin, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_Thickness__Windows_UI_Xaml__Thickness, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Thickness__<TThis>(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Thickness value, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement2.get_RequestedTheme, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_ElementTheme__Windows_UI_Xaml__ElementTheme, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.ElementTheme Func_UI_Xaml_ElementTheme__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.ElementTheme unsafe_value__retval;
			global::Windows.UI.Xaml.ElementTheme value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.IFrameworkElement3.add_Loading, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_FrameworkElement__object___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_object_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_FrameworkElement__object__WindowsRuntime_EventRegistrationToken__<TThis>(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object> handler, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_System_Object_V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_System_Object_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_System_Object_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.FrameworkElement, object>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget86>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_FrameworkElement_j_System_Object_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.UI.Xaml.IFrameworkElementOverrides.MeasureOverride, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Size__Windows_Foundation__Size, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Size__Windows_Foundation__Size, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.Size Func__Size___Size__<TThis>(
					global::System.__ComObject __this, 
					global::Windows.Foundation.Size availableSize, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.Size unsafe_result__retval;
			global::Windows.Foundation.Size result__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								availableSize, 
								&(unsafe_result__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			result__retval = unsafe_result__retval;
			// Return
			return result__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.IControlStatics3.GetIsTemplateFocusTarget, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_TArg0__bool__<TThis, TArg0>(
					global::System.__ComObject __this, 
					TArg0 element, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TArg0__arg = default(void*);
			bool result__retval;
			sbyte unsafe_result__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(TArg0).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_TArg0__arg, 
									&(unsafe_result__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				result__retval = unsafe_result__retval != 0;
				// Return
				return result__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(element);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControlStatics3.SetIsTemplateFocusTarget, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [in] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_TArg0__bool__<TThis, TArg0>(
					global::System.__ComObject __this, 
					TArg0 element, 
					bool value, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TArg0__arg = default(void*);
			sbyte unsafe_value;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(TArg0).TypeHandle
								);
				unsafe_value = (value ? ((sbyte)1) : ((sbyte)0));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_TArg0__arg, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(element);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IControl.get_FontWeight, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableStructMarshaller] Windows_UI_Text_FontWeight__Windows_UI_Text__FontWeight, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Text.FontWeight Func_UI_Text_FontWeight__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Text.FontWeight unsafe_value__retval;
			global::Windows.UI.Text.FontWeight value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.IControl.put_FontWeight, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableStructMarshaller] Windows_UI_Text_FontWeight__Windows_UI_Text__FontWeight, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Text_FontWeight__<TThis>(
					global::System.__ComObject __this, 
					global::Windows.UI.Text.FontWeight value, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.Controls.IControl.get_FontStyle, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Text_FontStyle__Windows_UI_Text__FontStyle, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Text.FontStyle Func_UI_Text_FontStyle__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Text.FontStyle unsafe_value__retval;
			global::Windows.UI.Text.FontStyle value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.IControlTemplate.get_TargetType, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTTypeNameMarshaller] System_Type__Windows_UI_Xaml_Interop__TypeName, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Type Func_Type__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::System.Type value__retval;
			global::System.Type__Impl.UnsafeType unsafe_value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = global::System.Runtime.InteropServices.McgMarshal.TypeNameToType(
								unsafe_value__retval.Name, 
								((int)unsafe_value__retval.Kind)
							);
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.IControlProtected.GetTemplateChild, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static TResult Func_string__TResult__<TThis, TResult>(
					global::System.__ComObject __this, 
					string childName, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_childName = default(global::System.Runtime.InteropServices.HSTRING);
			void* unsafe_TResult__retval = default(void*);
			TResult TResult__retval = default(TResult);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_childName = childName)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_childName;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_childName, childName, &(hstring_header_childName), &(unsafe_childName));
					unsafe_TResult__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										typeof(TThis).TypeHandle, 
										__targetIndex, 
										unsafe_childName, 
										&(unsafe_TResult__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					TResult__retval = (TResult)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_TResult__retval), 
										typeof(TResult).TypeHandle
									);
				}
				// Return
				return TResult__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TResult__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.IPropertyPathFactory.CreateInstance, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_string__IntPtr__<TThis>(
					global::System.__ComObject __this, 
					string path, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_path = default(global::System.Runtime.InteropServices.HSTRING);
			global::System.IntPtr unsafe_value__retval;
			global::System.IntPtr value__retval;
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_path = path)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_path;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_path, path, &(hstring_header_path), &(unsafe_path));
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_path, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = unsafe_value__retval;
			}
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.IGridStatics.GetRow, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Func_TArg0__int__<TThis, TArg0>(
					global::System.__ComObject __this, 
					TArg0 element, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TArg0__arg = default(void*);
			int unsafe_result__retval;
			int result__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(TArg0).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_TArg0__arg, 
									&(unsafe_result__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				result__retval = unsafe_result__retval;
				// Return
				return result__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(element);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IGridStatics.SetRow, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_TArg0__int__<TThis, TArg0>(
					global::System.__ComObject __this, 
					TArg0 element, 
					int value, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TArg0__arg = default(void*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(TArg0).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_TArg0__arg, 
									value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(element);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IRowDefinition.get_Height, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_GridLength__Windows_UI_Xaml__GridLength, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.GridLength Func_UI_Xaml_GridLength__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.GridLength unsafe_value__retval;
			global::Windows.UI.Xaml.GridLength value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.IRowDefinition.put_Height, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_GridLength__Windows_UI_Xaml__GridLength, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_GridLength__<TThis>(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.GridLength value, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.Controls.IContainerContentChangingEventArgs.get_Phase, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static uint Func_uint__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			uint unsafe_value__retval;
			uint value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.ITextBlock.get_TextWrapping, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_TextWrapping__Windows_UI_Xaml__TextWrapping, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.TextWrapping Func_UI_Xaml_TextWrapping__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.TextWrapping unsafe_value__retval;
			global::Windows.UI.Xaml.TextWrapping value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.ITextBlock.get_TextTrimming, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_TextTrimming__Windows_UI_Xaml__TextTrimming, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.TextTrimming Func_UI_Xaml_TextTrimming__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.TextTrimming unsafe_value__retval;
			global::Windows.UI.Xaml.TextTrimming value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.ITextBlock.get_TextAlignment, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_TextAlignment__Windows_UI_Xaml__TextAlignment, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.TextAlignment Func_UI_Xaml_TextAlignment__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.TextAlignment unsafe_value__retval;
			global::Windows.UI.Xaml.TextAlignment value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.ITextBlock.add_ContextMenuOpening, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_Controls_ContextMenuOpeningEventHandler__Windows_UI_Xaml_Controls__ContextMenuOpeningEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_Controls_ContextMenuOpeningEventHandler___WindowsRuntime_EventRegistrationToken__<TThis>(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler handler, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler__Impl.Vtbl** unsafe_handler = default(global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget105>(global::Windows.UI.Xaml.Controls.ContextMenuOpeningEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ITextBlock2.put_MaxLines, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__<TThis>(
					global::System.__ComObject __this, 
					int value, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.Controls.IContentControlOverrides.OnContentChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_object__object__<TThis>(
					global::System.__ComObject __this, 
					object oldContent, 
					object newContent, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_oldContent = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_newContent = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_oldContent = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(oldContent);
				unsafe_newContent = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(newContent);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_oldContent, 
									unsafe_newContent
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_oldContent)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_newContent)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IDataTemplateSelectorOverrides.SelectTemplateCore, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static TResult Func_object__TArg0__TResult__<TThis, TArg0, TResult>(
					global::System.__ComObject __this, 
					object item, 
					TArg0 container, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_item = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			void* unsafe_TArg0__arg = default(void*);
			void* unsafe_TResult__retval = default(void*);
			TResult TResult__retval = default(TResult);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_item = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(item);
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									container, 
									typeof(TArg0).TypeHandle
								);
				unsafe_TResult__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_item, 
									unsafe_TArg0__arg, 
									&(unsafe_TResult__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				TResult__retval = (TResult)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_TResult__retval), 
									typeof(TResult).TypeHandle
								);
				// Return
				return TResult__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_item)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(container);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TResult__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Shapes.IShape.get_Stretch, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Media_Stretch__Windows_UI_Xaml_Media__Stretch, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Stretch Func_UI_Xaml_Media_Stretch__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Stretch unsafe_value__retval;
			global::Windows.UI.Xaml.Media.Stretch value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Media.IImageBrush.add_ImageFailed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_ExceptionRoutedEventHandler__Windows_UI_Xaml__ExceptionRoutedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_ExceptionRoutedEventHandler___WindowsRuntime_EventRegistrationToken__<TThis>(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.ExceptionRoutedEventHandler handler, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.ExceptionRoutedEventHandler__Impl.Vtbl** unsafe_handler = default(global::Windows.UI.Xaml.ExceptionRoutedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.UI.Xaml.ExceptionRoutedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.UI.Xaml.ExceptionRoutedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget112>(global::Windows.UI.Xaml.ExceptionRoutedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.Storage.Streams.IRandomAccessStream.get_Size, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] ulong__unsigned __int64, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static ulong Func_ulong__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			ulong unsafe_value__retval;
			ulong value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Storage.Streams.IRandomAccessStream.put_Size, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] ulong__unsigned __int64, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_ulong__<TThis>(
					global::System.__ComObject __this, 
					ulong value, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.Storage.Streams.IRandomAccessStream.GetInputStreamAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] ulong__unsigned __int64, [fwd] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static TResult Func_ulong__TResult__<TThis, TResult>(
					global::System.__ComObject __this, 
					ulong position, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TResult__retval = default(void*);
			TResult TResult__retval = default(TResult);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_TResult__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									position, 
									&(unsafe_TResult__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				TResult__retval = (TResult)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_TResult__retval), 
									typeof(TResult).TypeHandle
								);
				// Return
				return TResult__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TResult__retval)));
			}
		}

		// Signature, Windows.Storage.Streams.IBuffer.put_Length, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__<TThis>(
					global::System.__ComObject __this, 
					uint value, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.Foundation.IAsyncOperationWithProgress<Windows.Storage.Streams.IBuffer,uint>.get_Progress, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationProgressHandler_2_Windows_Storage_Streams_IBuffer__uint___Windows_Foundation__AsyncOperationProgressHandler_A_Windows_Storage_Streams_IBuffer_j_uint_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IBuffer, uint> Func__AsyncOperationProgressHandler_2_Storage_Streams_IBuffer__uint___<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Storage_Streams_IBuffer_j_uint_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Storage_Streams_IBuffer_j_uint_V___Impl.Vtbl**);
			global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IBuffer, uint> __value__retval = default(global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IBuffer, uint>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IBuffer, uint>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IBuffer, uint>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget123>(global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Storage_Streams_IBuffer_j_uint_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.AsyncOperationProgressHandler<Windows.Storage.Streams.IBuffer,uint>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_TArg0__uint__<TThis, TArg0>(
					global::System.__ComObject __this, 
					TArg0 asyncInfo, 
					uint progressInfo, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TArg0__arg = default(void*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(TArg0).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_TArg0__arg, 
									progressInfo
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Windows.Foundation.AsyncOperationWithProgressCompletedHandler<Windows.Storage.Streams.IBuffer,uint>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [in] [Mcg.CodeGen.EnumMarshaller]  -> int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_TArg0__int<TThis, TArg0>(
					global::System.__ComObject __this, 
					TArg0 asyncInfo, 
					int asyncStatus, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TArg0__arg = default(void*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(TArg0).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_TArg0__arg, 
									asyncStatus
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Windows.Foundation.IAsyncOperationWithProgress<uint,uint>.get_Progress, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationProgressHandler_2_uint__uint___Windows_Foundation__AsyncOperationProgressHandler_A_uint_j_uint_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.AsyncOperationProgressHandler<uint, uint> Func__AsyncOperationProgressHandler_2_uint__uint___<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationProgressHandler_A_uint_j_uint_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.AsyncOperationProgressHandler_A_uint_j_uint_V___Impl.Vtbl**);
			global::Windows.Foundation.AsyncOperationProgressHandler<uint, uint> __value__retval = default(global::Windows.Foundation.AsyncOperationProgressHandler<uint, uint>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationProgressHandler<uint, uint>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationProgressHandler<uint, uint>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget134>(global::Windows.Foundation.AsyncOperationProgressHandler_A_uint_j_uint_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IStackPanel.get_Orientation, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_Orientation__Windows_UI_Xaml_Controls__Orientation, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.Orientation Func_UI_Xaml_Controls_Orientation__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.Orientation unsafe_value__retval;
			global::Windows.UI.Xaml.Controls.Orientation value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Media.ISolidColorBrush.get_Color, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Color Func_UI_Color__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Color unsafe_value__retval;
			global::Windows.UI.Color value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Media.ISolidColorBrush.put_Color, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Color__Windows_UI__Color, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Color__<TThis>(
					global::System.__ComObject __this, 
					global::Windows.UI.Color value, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.Controls.IScrollViewerStatics.GetHorizontalScrollBarVisibility, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_ScrollBarVisibility__Windows_UI_Xaml_Controls__ScrollBarVisibility, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.ScrollBarVisibility Func_TArg0__UI_Xaml_Controls_ScrollBarVisibility__<TThis, TArg0>(
					global::System.__ComObject __this, 
					TArg0 element, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TArg0__arg = default(void*);
			global::Windows.UI.Xaml.Controls.ScrollBarVisibility unsafe_result__retval;
			global::Windows.UI.Xaml.Controls.ScrollBarVisibility result__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(TArg0).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_TArg0__arg, 
									&(unsafe_result__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				result__retval = unsafe_result__retval;
				// Return
				return result__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(element);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IScrollViewerStatics.GetHorizontalScrollMode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_ScrollMode__Windows_UI_Xaml_Controls__ScrollMode, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.ScrollMode Func_TArg0__UI_Xaml_Controls_ScrollMode__<TThis, TArg0>(
					global::System.__ComObject __this, 
					TArg0 element, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TArg0__arg = default(void*);
			global::Windows.UI.Xaml.Controls.ScrollMode unsafe_result__retval;
			global::Windows.UI.Xaml.Controls.ScrollMode result__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(TArg0).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_TArg0__arg, 
									&(unsafe_result__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				result__retval = unsafe_result__retval;
				// Return
				return result__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(element);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IScrollViewer.get_HorizontalScrollBarVisibility, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_ScrollBarVisibility__Windows_UI_Xaml_Controls__ScrollBarVisibility, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.ScrollBarVisibility Func_UI_Xaml_Controls_ScrollBarVisibility__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.ScrollBarVisibility unsafe_value__retval;
			global::Windows.UI.Xaml.Controls.ScrollBarVisibility value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.IScrollViewer.get_HorizontalScrollMode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_ScrollMode__Windows_UI_Xaml_Controls__ScrollMode, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.ScrollMode Func_UI_Xaml_Controls_ScrollMode__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.ScrollMode unsafe_value__retval;
			global::Windows.UI.Xaml.Controls.ScrollMode value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.IScrollViewer.get_ZoomMode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_ZoomMode__Windows_UI_Xaml_Controls__ZoomMode, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.ZoomMode Func_UI_Xaml_Controls_ZoomMode__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.ZoomMode unsafe_value__retval;
			global::Windows.UI.Xaml.Controls.ZoomMode value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.IScrollViewer.get_MinZoomFactor, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static float Func_float__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			float unsafe_value__retval;
			float value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.IScrollViewer.put_MinZoomFactor, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] float__float, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_float__<TThis>(
					global::System.__ComObject __this, 
					float value, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.IVisualStateGroup.add_CurrentStateChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_UI_Xaml_VisualStateChangedEventHandler__Windows_UI_Xaml__VisualStateChangedEventHandler *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func_UI_Xaml_VisualStateChangedEventHandler___WindowsRuntime_EventRegistrationToken__<TThis>(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.VisualStateChangedEventHandler handler, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.VisualStateChangedEventHandler__Impl.Vtbl** unsafe_handler = default(global::Windows.UI.Xaml.VisualStateChangedEventHandler__Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.UI.Xaml.VisualStateChangedEventHandler__Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.UI.Xaml.VisualStateChangedEventHandler).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget179>(global::Windows.UI.Xaml.VisualStateChangedEventHandler__Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.UI.Xaml.IVisualTransition.get_GeneratedDuration, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_Duration__Windows_UI_Xaml__Duration, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Duration Func_UI_Xaml_Duration__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Duration unsafe_value__retval;
			global::Windows.UI.Xaml.Duration value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.IVisualTransition.put_GeneratedDuration, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_Duration__Windows_UI_Xaml__Duration, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Duration__<TThis>(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Duration value, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.Media.Animation.IStoryboardStatics.GetTargetProperty, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static string Func_TArg0__string__<TThis, TArg0>(
					global::System.__ComObject __this, 
					TArg0 element, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TArg0__arg = default(void*);
			global::System.Runtime.InteropServices.HSTRING unsafe_result__retval = default(global::System.Runtime.InteropServices.HSTRING);
			string result__retval = default(string);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(TArg0).TypeHandle
								);
				unsafe_result__retval = default(global::System.Runtime.InteropServices.HSTRING);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_TArg0__arg, 
									&(unsafe_result__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				result__retval = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_result__retval);
				// Return
				return result__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(element);
				global::System.Runtime.InteropServices.McgMarshal.FreeHString(unsafe_result__retval.handle);
			}
		}

		// Signature, Windows.UI.Xaml.Media.Animation.IStoryboardStatics.SetTargetProperty, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_TArg0__string__<TThis, TArg0>(
					global::System.__ComObject __this, 
					TArg0 element, 
					string path, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TArg0__arg = default(void*);
			global::System.Runtime.InteropServices.HSTRING unsafe_path = default(global::System.Runtime.InteropServices.HSTRING);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									element, 
									typeof(TArg0).TypeHandle
								);
				fixed (char* pBuffer_path = path)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_path;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_path, path, &(hstring_header_path), &(unsafe_path));
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										typeof(TThis).TypeHandle, 
										__targetIndex, 
										unsafe_TArg0__arg, 
										unsafe_path
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				}
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(element);
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IWebView2.add_NavigationStarting, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_WebView__Windows_UI_Xaml_Controls_WebViewNavigationStartingEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_WebView_j_Windows_UI_Xaml_Controls_WebViewNavigationStartingEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_WebView__UI_Xaml_Controls_WebViewNavigationStartingEventArgs__WindowsRuntime_EventRegistrationToken__<TThis>(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.WebView, global::Windows.UI.Xaml.Controls.WebViewNavigationStartingEventArgs> handler, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_WebView_j_Windows_UI_Xaml_Controls_WebViewNavigationStartingEventArgs_V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_WebView_j_Windows_UI_Xaml_Controls_WebViewNavigationStartingEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_WebView_j_Windows_UI_Xaml_Controls_WebViewNavigationStartingEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.WebView, global::Windows.UI.Xaml.Controls.WebViewNavigationStartingEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget187>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_WebView_j_Windows_UI_Xaml_Controls_WebViewNavigationStartingEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IWebView2.add_ContentLoading, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_WebView__Windows_UI_Xaml_Controls_WebViewContentLoadingEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_WebView_j_Windows_UI_Xaml_Controls_WebViewContentLoadingEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_WebView__UI_Xaml_Controls_WebViewContentLoadingEventArgs__WindowsRuntime_EventRegistrationToken__<TThis>(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.WebView, global::Windows.UI.Xaml.Controls.WebViewContentLoadingEventArgs> handler, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_WebView_j_Windows_UI_Xaml_Controls_WebViewContentLoadingEventArgs_V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_WebView_j_Windows_UI_Xaml_Controls_WebViewContentLoadingEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_WebView_j_Windows_UI_Xaml_Controls_WebViewContentLoadingEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.WebView, global::Windows.UI.Xaml.Controls.WebViewContentLoadingEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget188>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_WebView_j_Windows_UI_Xaml_Controls_WebViewContentLoadingEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IWebView2.add_DOMContentLoaded, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_WebView__Windows_UI_Xaml_Controls_WebViewDOMContentLoadedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_WebView_j_Windows_UI_Xaml_Controls_WebViewDOMContentLoadedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_WebView__UI_Xaml_Controls_WebViewDOMContentLoadedEventArgs__WindowsRuntime_EventRegistrationToken__<TThis>(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.WebView, global::Windows.UI.Xaml.Controls.WebViewDOMContentLoadedEventArgs> handler, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_WebView_j_Windows_UI_Xaml_Controls_WebViewDOMContentLoadedEventArgs_V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_WebView_j_Windows_UI_Xaml_Controls_WebViewDOMContentLoadedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_WebView_j_Windows_UI_Xaml_Controls_WebViewDOMContentLoadedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.WebView, global::Windows.UI.Xaml.Controls.WebViewDOMContentLoadedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget189>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_WebView_j_Windows_UI_Xaml_Controls_WebViewDOMContentLoadedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IWebView2.InvokeScriptAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static TResult Func_string__TArg0__TResult__<TThis, TArg0, TResult>(
					global::System.__ComObject __this, 
					string scriptName, 
					TArg0 arguments, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_scriptName = default(global::System.Runtime.InteropServices.HSTRING);
			void* unsafe_TArg0__arg = default(void*);
			void* unsafe_TResult__retval = default(void*);
			TResult TResult__retval = default(TResult);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_scriptName = scriptName)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_scriptName;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_scriptName, scriptName, &(hstring_header_scriptName), &(unsafe_scriptName));
					unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										arguments, 
										typeof(TArg0).TypeHandle
									);
					unsafe_TResult__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										typeof(TThis).TypeHandle, 
										__targetIndex, 
										unsafe_scriptName, 
										unsafe_TArg0__arg, 
										&(unsafe_TResult__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					TResult__retval = (TResult)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_TResult__retval), 
										typeof(TResult).TypeHandle
									);
				}
				// Return
				return TResult__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(arguments);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TResult__retval)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IWebView2.add_NavigationCompleted, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_WebView__Windows_UI_Xaml_Controls_WebViewNavigationCompletedEventArgs___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_WebView_j_Windows_UI_Xaml_Controls_WebViewNavigationCompletedEventArgs_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_WebView__UI_Xaml_Controls_WebViewNavigationCompletedEventArgs__WindowsRuntime_EventRegistrationToken__<TThis>(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.WebView, global::Windows.UI.Xaml.Controls.WebViewNavigationCompletedEventArgs> handler, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_WebView_j_Windows_UI_Xaml_Controls_WebViewNavigationCompletedEventArgs_V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_WebView_j_Windows_UI_Xaml_Controls_WebViewNavigationCompletedEventArgs_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_WebView_j_Windows_UI_Xaml_Controls_WebViewNavigationCompletedEventArgs_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.WebView, global::Windows.UI.Xaml.Controls.WebViewNavigationCompletedEventArgs>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget190>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_WebView_j_Windows_UI_Xaml_Controls_WebViewNavigationCompletedEventArgs_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.IWebView2.add_UnsafeContentWarningDisplaying, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_WebView__object___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_WebView_j_object_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_WebView__object__WindowsRuntime_EventRegistrationToken__<TThis>(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.WebView, object> handler, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_WebView_j_System_Object_V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_WebView_j_System_Object_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_WebView_j_System_Object_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.WebView, object>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget192>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_WebView_j_System_Object_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.Primitives.IRangeBaseOverrides.OnMinimumChanged, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] double__double, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] double__double, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_double__double__<TThis>(
					global::System.__ComObject __this, 
					double oldMinimum, 
					double newMinimum, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								oldMinimum, 
								newMinimum
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.Controls.IBorder.get_CornerRadius, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_CornerRadius__Windows_UI_Xaml__CornerRadius, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.CornerRadius Func_UI_Xaml_CornerRadius__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.CornerRadius unsafe_value__retval;
			global::Windows.UI.Xaml.CornerRadius value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Media.Animation.IObjectKeyFrame.get_KeyTime, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_Media_Animation_KeyTime__Windows_UI_Xaml_Media_Animation__KeyTime, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Media.Animation.KeyTime Func_UI_Xaml_Media_Animation_KeyTime__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Media.Animation.KeyTime unsafe_value__retval;
			global::Windows.UI.Xaml.Media.Animation.KeyTime value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Media.Animation.IObjectKeyFrame.put_KeyTime, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_UI_Xaml_Media_Animation_KeyTime__Windows_UI_Xaml_Media_Animation__KeyTime, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_UI_Xaml_Media_Animation_KeyTime__<TThis>(
					global::System.__ComObject __this, 
					global::Windows.UI.Xaml.Media.Animation.KeyTime value, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, Windows.UI.Xaml.Media.Animation.IDoubleAnimation.put_From, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTReferenceMarshaller] System_Nullable_1_double___Windows_Foundation__IReference_A_double_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_Nullable_1_double___<TThis>(
					global::System.__ComObject __this, 
					global::System.Nullable<double> value, 
					int __targetIndex)
		{
			// Setup
			global::System.Nullable_A_double_V___Impl.Vtbl** unsafe_value = default(global::System.Nullable_A_double_V___Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				if (value.HasValue)
				{
					global::System.Runtime.InteropServices.WindowsRuntime.ReferenceImpl<double> unsafe_value_Wrapper = new global::System.Runtime.InteropServices.WindowsRuntime.ReferenceImpl<double>(value.Value, 9);
					unsafe_value = (global::System.Nullable_A_double_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.ManagedObjectToComInterface(
										unsafe_value_Wrapper, 
										typeof(global::Windows.Foundation.IReference<double>).TypeHandle
									);
				}
				else
					unsafe_value = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_value)));
			}
		}

		// Signature, Windows.UI.Xaml.Controls.ISplitView.get_DisplayMode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_UI_Xaml_Controls_SplitViewDisplayMode__Windows_UI_Xaml_Controls__SplitViewDisplayMode, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.UI.Xaml.Controls.SplitViewDisplayMode Func_UI_Xaml_Controls_SplitViewDisplayMode__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Controls.SplitViewDisplayMode unsafe_value__retval;
			global::Windows.UI.Xaml.Controls.SplitViewDisplayMode value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.UI.Xaml.Controls.ISplitView.add_PaneClosed, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_TypedEventHandler_2_Windows_UI_Xaml_Controls_SplitView__object___Windows_Foundation__TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_object_V_ *, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_Runtime_InteropServices_WindowsRuntime_EventRegistrationToken__Windows_Foundation__EventRegistrationToken, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken Func__TypedEventHandler_2_UI_Xaml_Controls_SplitView__object__WindowsRuntime_EventRegistrationToken__<TThis>(
					global::System.__ComObject __this, 
					global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SplitView, object> handler, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_System_Object_V___Impl.Vtbl** unsafe_handler = default(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_System_Object_V___Impl.Vtbl**);
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken unsafe_token__retval;
			global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken token__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_handler = (global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_System_Object_V___Impl.Vtbl**)global::System.Runtime.InteropServices.McgModuleManager.DelegateToComInterface(
									handler, 
									typeof(global::Windows.Foundation.TypedEventHandler<global::Windows.UI.Xaml.Controls.SplitView, object>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget247>(global::Windows.Foundation.TypedEventHandler_A_Windows_UI_Xaml_Controls_SplitView_j_System_Object_V___Impl.Invoke)
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_handler, 
									&(unsafe_token__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				token__retval = unsafe_token__retval;
				// Return
				return token__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_handler)));
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.CreateFromString, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static object Func_string__object__<TThis>(
					global::System.__ComObject __this, 
					string value, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_value = default(global::System.Runtime.InteropServices.HSTRING);
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_result__retval = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			object result__retval = default(object);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_value = value)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_value;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_value, value, &(hstring_header_value), &(unsafe_value));
					unsafe_result__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										typeof(TThis).TypeHandle, 
										__targetIndex, 
										unsafe_value, 
										&(unsafe_result__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					result__retval = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_result__retval));
				}
				// Return
				return result__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_result__retval)));
			}
		}

		// Signature, Windows.Storage.Streams.IRandomAccessStreamReferenceStatics.CreateFromUri, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.WinRTUriMarshaller] System_Uri__Windows_Foundation__Uri, [fwd] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static TResult Func_Uri__TResult__<TThis, TResult>(
					global::System.__ComObject __this, 
					global::System.Uri uri, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_uri = default(global::System.Runtime.InteropServices.__vtable_IInspectable*);
			void* unsafe_TResult__retval = default(void*);
			TResult TResult__retval = default(TResult);
			int unsafe___return__;
			try
			{
				// Marshalling
				if (uri != null)
					unsafe_uri = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::McgInterop.McgHelpers.SystemUri2WindowsFoundationUri(uri);
				else
					unsafe_uri = null;
				unsafe_TResult__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_uri, 
									&(unsafe_TResult__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				TResult__retval = (TResult)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_TResult__retval), 
									typeof(TResult).TypeHandle
								);
				// Return
				return TResult__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_uri)));
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TResult__retval)));
			}
		}

		// Signature, Windows.Storage.IStorageFolder.CreateFileAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.EnumMarshaller]  -> int, [fwd] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static TResult Func_string__intTResult__<TThis, TResult>(
					global::System.__ComObject __this, 
					string desiredName, 
					int options, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_desiredName = default(global::System.Runtime.InteropServices.HSTRING);
			void* unsafe_TResult__retval = default(void*);
			TResult TResult__retval = default(TResult);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_desiredName = desiredName)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_desiredName;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_desiredName, desiredName, &(hstring_header_desiredName), &(unsafe_desiredName));
					unsafe_TResult__retval = null;
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										typeof(TThis).TypeHandle, 
										__targetIndex, 
										unsafe_desiredName, 
										options, 
										&(unsafe_TResult__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					TResult__retval = (TResult)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
										((global::System.IntPtr)unsafe_TResult__retval), 
										typeof(TResult).TypeHandle
									);
				}
				// Return
				return TResult__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TResult__retval)));
			}
		}

		// Signature, Windows.Storage.IStorageItem.DeleteAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller]  -> int, [fwd] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static TResult Func_intTResult__<TThis, TResult>(
					global::System.__ComObject __this, 
					int option, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TResult__retval = default(void*);
			TResult TResult__retval = default(TResult);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_TResult__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									option, 
									&(unsafe_TResult__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				TResult__retval = (TResult)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_TResult__retval), 
									typeof(TResult).TypeHandle
								);
				// Return
				return TResult__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TResult__retval)));
			}
		}

		// Signature, Windows.Storage.IStorageItem.get_DateCreated, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDateTimeMarshaller] System_DateTimeOffset__Windows_Foundation__DateTime, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.DateTimeOffset Func_DateTimeOffset__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::System.DateTimeOffset value__retval;
			global::System.DateTimeOffset__Impl.UnsafeType unsafe_value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = new global::System.DateTimeOffset((unsafe_value__retval.UniversalTime + 504911232000000000), global::System.TimeSpan.Zero).ToLocalTime();
			// Return
			return value__retval;
		}

		// Signature, Windows.Web.Http.IHttpClientFactory.Create, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::System.IntPtr Func_TArg0__IntPtr__<TThis, TArg0>(
					global::System.__ComObject __this, 
					TArg0 filter, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TArg0__arg = default(void*);
			global::System.IntPtr unsafe_value__retval;
			global::System.IntPtr value__retval;
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									filter, 
									typeof(TArg0).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_TArg0__arg, 
									&(unsafe_value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				value__retval = unsafe_value__retval;
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(filter);
			}
		}

		// Signature, Windows.Web.Http.Headers.IHttpContentHeaderCollection.TryAppendWithoutValidation, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static bool Func_string__string__bool__<TThis>(
					global::System.__ComObject __this, 
					string name, 
					string value, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_name = default(global::System.Runtime.InteropServices.HSTRING);
			global::System.Runtime.InteropServices.HSTRING unsafe_value = default(global::System.Runtime.InteropServices.HSTRING);
			bool result__retval;
			sbyte unsafe_result__retval;
			int unsafe___return__;
			// Marshalling
			fixed (char* pBuffer_name = name)
			{
				global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_name;
				global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_name, name, &(hstring_header_name), &(unsafe_name));
				fixed (char* pBuffer_value = value)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_value;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_value, value, &(hstring_header_value), &(unsafe_value));
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										typeof(TThis).TypeHandle, 
										__targetIndex, 
										unsafe_name, 
										unsafe_value, 
										&(unsafe_result__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					result__retval = unsafe_result__retval != 0;
				}
			}
			// Return
			return result__retval;
		}

		// Signature, Windows.Foundation.IAsyncOperationWithProgress<Windows.Storage.Streams.IInputStream,ulong>.get_Progress, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationProgressHandler_2_Windows_Storage_Streams_IInputStream__ulong___Windows_Foundation__AsyncOperationProgressHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IInputStream, ulong> Func__AsyncOperationProgressHandler_2_Storage_Streams_IInputStream__ulong___<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Vtbl**);
			global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IInputStream, ulong> __value__retval = default(global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IInputStream, ulong>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IInputStream, ulong>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Storage.Streams.IInputStream, ulong>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget293>(global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Storage_Streams_IInputStream_j_ulong_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.AsyncOperationProgressHandler<Windows.Storage.Streams.IInputStream,ulong>.Invoke, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] ulong__unsigned __int64, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_TArg0__ulong__<TThis, TArg0>(
					global::System.__ComObject __this, 
					TArg0 asyncInfo, 
					ulong progressInfo, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TArg0__arg = default(void*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									asyncInfo, 
									typeof(TArg0).TypeHandle
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_TArg0__arg, 
									progressInfo
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(asyncInfo);
			}
		}

		// Signature, Windows.Foundation.IAsyncOperationWithProgress<string,ulong>.get_Progress, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationProgressHandler_2_string__ulong___Windows_Foundation__AsyncOperationProgressHandler_A_string_j_ulong_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.AsyncOperationProgressHandler<string, ulong> Func__AsyncOperationProgressHandler_2_string__ulong___<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationProgressHandler_A_string_j_ulong_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.AsyncOperationProgressHandler_A_string_j_ulong_V___Impl.Vtbl**);
			global::Windows.Foundation.AsyncOperationProgressHandler<string, ulong> __value__retval = default(global::Windows.Foundation.AsyncOperationProgressHandler<string, ulong>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationProgressHandler<string, ulong>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationProgressHandler<string, ulong>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget297>(global::Windows.Foundation.AsyncOperationProgressHandler_A_string_j_ulong_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Foundation.IAsyncOperationWithProgress<ulong,ulong>.get_Progress, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationProgressHandler_2_ulong__ulong___Windows_Foundation__AsyncOperationProgressHandler_A_ulong_j_ulong_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.AsyncOperationProgressHandler<ulong, ulong> Func__AsyncOperationProgressHandler_2_ulong__ulong___<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationProgressHandler_A_ulong_j_ulong_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.AsyncOperationProgressHandler_A_ulong_j_ulong_V___Impl.Vtbl**);
			global::Windows.Foundation.AsyncOperationProgressHandler<ulong, ulong> __value__retval = default(global::Windows.Foundation.AsyncOperationProgressHandler<ulong, ulong>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationProgressHandler<ulong, ulong>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationProgressHandler<ulong, ulong>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget301>(global::Windows.Foundation.AsyncOperationProgressHandler_A_ulong_j_ulong_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, Windows.Web.Http.IHttpResponseMessage.get_StatusCode, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.EnumMarshaller] Windows_Web_Http_HttpStatusCode__Windows_Web_Http__HttpStatusCode, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Web.Http.HttpStatusCode Func_Web_Http_HttpStatusCode__<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Web.Http.HttpStatusCode unsafe_value__retval;
			global::Windows.Web.Http.HttpStatusCode value__retval;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_value__retval)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			value__retval = unsafe_value__retval;
			// Return
			return value__retval;
		}

		// Signature, Windows.Foundation.IAsyncOperationWithProgress<Windows.Web.Http.HttpResponseMessage,Windows.Web.Http.HttpProgress>.get_Progress, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTDelegateMarshaller] Windows_Foundation_AsyncOperationProgressHandler_2_Windows_Web_Http_HttpResponseMessage__Windows_Web_Http_HttpProgress___Windows_Foundation__AsyncOperationProgressHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V_ *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> Func__AsyncOperationProgressHandler_2_Web_Http_HttpResponseMessage__Web_Http_HttpProgress___<TThis>(
					global::System.__ComObject __this, 
					int __targetIndex)
		{
			// Setup
			global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl** unsafe___value__retval = default(global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Vtbl**);
			global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress> __value__retval = default(global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe___value__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									&(unsafe___value__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				__value__retval = (global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToDelegate(
									((global::System.IntPtr)unsafe___value__retval), 
									typeof(global::Windows.Foundation.AsyncOperationProgressHandler<global::Windows.Web.Http.HttpResponseMessage, global::Windows.Web.Http.HttpProgress>).TypeHandle, 
									global::McgInterop.Intrinsics.AddrOf<global::McgInterop.AddrOfIntrinsics.AddrOfTarget305>(global::Windows.Foundation.AsyncOperationProgressHandler_A_Windows_Web_Http_HttpResponseMessage_j_Windows_Web_Http_HttpProgress_V___Impl.Invoke)
								);
				// Return
				return __value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe___value__retval)));
			}
		}

		// Signature, System.Collections.Generic.IList<Windows.Foundation.Rect>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Rect__Windows_Foundation__Rect, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint___Rect__<TThis>(
					global::System.__ComObject __this, 
					uint index, 
					global::Windows.Foundation.Rect value, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								index, 
								value
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Collections.Generic.IList<Windows.UI.Xaml.Markup.XmlnsDefinition>.SetAt, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, [fwd] [in] [Mcg.CodeGen.StructMarshaller] Windows_UI_Xaml_Markup_XmlnsDefinition__Windows_UI_Xaml_Markup__XmlnsDefinition, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_uint__UI_Xaml_Markup_XmlnsDefinition__<TThis>(
					global::System.__ComObject __this, 
					uint index, 
					global::Windows.UI.Xaml.Markup.XmlnsDefinition value, 
					int __targetIndex)
		{
			// Setup
			global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType unsafe_value = default(global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType);
			int unsafe___return__;
			try
			{
				// Marshalling
				global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.Marshal__SafeToUnsafe(
									ref value, 
									out unsafe_value
								);
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									index, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
			}
			finally
			{
				// Cleanup
				global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.Cleanup__Unsafe(ref unsafe_value);
			}
		}

		// Signature, Windows.ApplicationModel.Resources.IResourceLoader.GetString, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [fwd] [out] [retval] [nativebyref] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static string Func_string__string__<TThis>(
					global::System.__ComObject __this, 
					string resource, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.HSTRING unsafe_resource = default(global::System.Runtime.InteropServices.HSTRING);
			global::System.Runtime.InteropServices.HSTRING unsafe_value__retval = default(global::System.Runtime.InteropServices.HSTRING);
			string value__retval = default(string);
			int unsafe___return__;
			try
			{
				// Marshalling
				fixed (char* pBuffer_resource = resource)
				{
					global::System.Runtime.InteropServices.HSTRING_HEADER hstring_header_resource;
					global::System.Runtime.InteropServices.McgMarshal.StringToHStringReference(pBuffer_resource, resource, &(hstring_header_resource), &(unsafe_resource));
					unsafe_value__retval = default(global::System.Runtime.InteropServices.HSTRING);
					// Call to native method
					unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
										__this, 
										typeof(TThis).TypeHandle, 
										__targetIndex, 
										unsafe_resource, 
										&(unsafe_value__retval)
									);
					global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
					value__retval = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_value__retval);
				}
				// Return
				return value__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.FreeHString(unsafe_value__retval.handle);
			}
		}

		// Signature, Windows.Graphics.Imaging.IBitmapEncoderStatics.CreateForTranscodingAsync, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [in] [GenericTypeMarshaller]  -> T, [fwd] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static TResult Func_TArg0__TArg1__TResult__<TThis, TArg0, TArg1, TResult>(
					global::System.__ComObject __this, 
					TArg0 stream, 
					TArg1 bitmapDecoder, 
					int __targetIndex)
		{
			// Setup
			void* unsafe_TArg0__arg = default(void*);
			void* unsafe_TArg1__arg = default(void*);
			void* unsafe_TResult__retval = default(void*);
			TResult TResult__retval = default(TResult);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_TArg0__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									stream, 
									typeof(TArg0).TypeHandle
								);
				unsafe_TArg1__arg = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
									bitmapDecoder, 
									typeof(TArg1).TypeHandle
								);
				unsafe_TResult__retval = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									unsafe_TArg0__arg, 
									unsafe_TArg1__arg, 
									&(unsafe_TResult__retval)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				TResult__retval = (TResult)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_TResult__retval), 
									typeof(TResult).TypeHandle
								);
				// Return
				return TResult__retval;
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg0__arg)));
				global::System.GC.KeepAlive(stream);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TArg1__arg)));
				global::System.GC.KeepAlive(bitmapDecoder);
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_TResult__retval)));
			}
		}

		// Signature, Windows.Foundation.Diagnostics.IAsyncCausalityTracerStatics.TraceOperationCompletion, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller]  -> int, [fwd] [in] [Mcg.CodeGen.EnumMarshaller]  -> int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_Guid__System.Guid, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] ulong__unsigned __int64, [fwd] [in] [Mcg.CodeGen.EnumMarshaller]  -> int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_intintGuid__ulong__int<TThis>(
					global::System.__ComObject __this, 
					int traceLevel, 
					int source, 
					global::System.Guid platformId, 
					ulong operationId, 
					int status, 
					int __targetIndex)
		{
			// Setup
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								traceLevel, 
								source, 
								platformId, 
								operationId, 
								status
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetTypeAttr, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_out_IntPtr__<TThis>(
					global::System.__ComObject __this, 
					out global::System.IntPtr ppTypeAttr, 
					int __targetIndex)
		{
			// Setup
			global::System.IntPtr unsafe_ppTypeAttr;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								&(unsafe_ppTypeAttr)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			ppTypeAttr = unsafe_ppTypeAttr;
			// Return
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetTypeComp, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Runtime_InteropServices_ComTypes_ITypeComp__System_Private_Interop__System_Runtime_InteropServices_ComTypes__ITypeComp__System_Private_Interop *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_out__ComTypes_ITypeComp__Private_Interop__<TThis>(
					global::System.__ComObject __this, 
					out global::System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop ppTComp, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop__Impl.Vtbl** unsafe_ppTComp = default(global::System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_ppTComp = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									&(unsafe_ppTComp)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				ppTComp = (global::System.Runtime.InteropServices.ComTypes.ITypeComp__System_Private_Interop)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_ppTComp), 
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Runtime.InteropServices.ComTypes.ITypeComp,System.Private.Interop, Version=4.0.0.0, Culture=neutral, Publ" +
											"icKeyToken=b03f5f7f11d50a3a")
								);
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_ppTComp)));
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetFuncDesc, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__out_IntPtr__<TThis>(
					global::System.__ComObject __this, 
					int index, 
					out global::System.IntPtr ppFuncDesc, 
					int __targetIndex)
		{
			// Setup
			global::System.IntPtr unsafe_ppFuncDesc;
			int unsafe___return__;
			// Marshalling
			// Call to native method
			unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								index, 
								&(unsafe_ppFuncDesc)
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			ppFuncDesc = unsafe_ppFuncDesc;
			// Return
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetDocumentation, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BstrMarshaller] string__wchar_t *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BstrMarshaller] string__wchar_t *, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.BstrMarshaller] string__wchar_t *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__out_string__out_string__out_int__out_string__<TThis>(
					global::System.__ComObject __this, 
					int index, 
					out string strName, 
					out string strDocString, 
					out int dwHelpContext, 
					out string strHelpFile, 
					int __targetIndex)
		{
			// Setup
			ushort* unsafe_strName = default(ushort*);
			ushort* unsafe_strDocString = default(ushort*);
			int unsafe_dwHelpContext;
			ushort* unsafe_strHelpFile = default(ushort*);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_strName = null;
				unsafe_strDocString = null;
				unsafe_strHelpFile = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									index, 
									&(unsafe_strName), 
									&(unsafe_strDocString), 
									&(unsafe_dwHelpContext), 
									&(unsafe_strHelpFile)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				strHelpFile = global::McgInterop.Helpers.ConvertBSTRToString(unsafe_strHelpFile);
				dwHelpContext = unsafe_dwHelpContext;
				strDocString = global::McgInterop.Helpers.ConvertBSTRToString(unsafe_strDocString);
				strName = global::McgInterop.Helpers.ConvertBSTRToString(unsafe_strName);
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.ExternalInterop.SysFreeString(unsafe_strName);
				global::System.Runtime.InteropServices.ExternalInterop.SysFreeString(unsafe_strDocString);
				global::System.Runtime.InteropServices.ExternalInterop.SysFreeString(unsafe_strHelpFile);
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.GetRefTypeInfo, [fwd] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] int__int, [fwd] [out] [managedbyref] [nativebyref] [Mcg.CodeGen.ComInterfaceMarshaller] System_Runtime_InteropServices_ComTypes_ITypeInfo__System_Private_Interop__System_Runtime_InteropServices_ComTypes__ITypeInfo__System_Private_Interop *, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_int__out__ComTypes_ITypeInfo__Private_Interop__<TThis>(
					global::System.__ComObject __this, 
					int hRef, 
					out global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop ppTI, 
					int __targetIndex)
		{
			// Setup
			global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl** unsafe_ppTI = default(global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop__Impl.Vtbl**);
			int unsafe___return__;
			try
			{
				// Marshalling
				unsafe_ppTI = null;
				// Call to native method
				unsafe___return__ = global::McgInterop.ComCallHelpers.ComCall__HRESULT(
									__this, 
									typeof(TThis).TypeHandle, 
									__targetIndex, 
									hRef, 
									&(unsafe_ppTI)
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				ppTI = (global::System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_ppTI), 
									global::System.Runtime.InteropServices.TypeOfHelper.RuntimeTypeHandleOf("System.Runtime.InteropServices.ComTypes.ITypeInfo,System.Private.Interop, Version=4.0.0.0, Culture=neutral, Publ" +
											"icKeyToken=b03f5f7f11d50a3a")
								);
				// Return
			}
			finally
			{
				// Cleanup
				global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)unsafe_ppTI)));
			}
		}

		// Signature, System.Runtime.InteropServices.ComTypes.ITypeInfo__System_Private_Interop.ReleaseTypeAttr, [fwd] [return] [Mcg.CodeGen.VoidReturnMarshaller] void__void, [fwd] [in] [Mcg.CodeGen.BlittableValueMarshaller] System_IntPtr____w64 int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void Proc_void__IntPtr__<TThis>(
					global::System.__ComObject __this, 
					global::System.IntPtr pTypeAttr, 
					int __targetIndex)
		{
			// Marshalling
			// Call to native method
			global::McgInterop.ComCallHelpers.ComCall__void__(
								__this, 
								typeof(TThis).TypeHandle, 
								__targetIndex, 
								pTypeAttr
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			// Return
		}
	}

	internal unsafe static partial class ComCallHelpers
	{
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Type__Impl.UnsafeType arg1, 
					void* arg2, 
					global::System.Runtime.InteropServices.HSTRING arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.IntPtr arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					void* arg1, 
					int arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					global::System.Type__Impl.UnsafeType arg1, 
					global::System.Type__Impl.UnsafeType arg2, 
					void* arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.IntPtr arg1, 
					void* arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					void* arg1, 
					global::System.IntPtr arg2, 
					void* arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					long arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Point arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Rect arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Rect arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					double arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Point arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					sbyte arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Xaml.Input.ManipulationModes arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Size arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Point arg0, 
					global::Windows.Foundation.Rect arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Point arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Xaml.Thickness arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Type__Impl.UnsafeType arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Size arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					sbyte arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					sbyte arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Text.FontWeight arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					global::System.IntPtr arg1, 
					void* arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Type__Impl.UnsafeType arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Xaml.GridLength arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					ulong arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					ulong arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					uint arg1, 
					global::Windows.Storage.Streams.InputStreamOptions arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					uint arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					uint arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Color arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Color arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					float arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					void* arg1, 
					void* arg2, 
					sbyte arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Xaml.Duration arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Runtime.InteropServices.HSTRING arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Runtime.InteropServices.HSTRING arg1, 
					sbyte arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Type__Impl.UnsafeType arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					double arg0, 
					double arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Xaml.CornerRadius arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Xaml.Media.Animation.KeyTime arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.TimeSpan arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					int arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					uint arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					int arg1, 
					void* arg2, 
					int arg3, 
					int arg4, 
					void* arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					int arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					void* arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.Runtime.InteropServices.HSTRING arg0, 
					global::System.Runtime.InteropServices.HSTRING arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					ulong arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::Windows.Web.Http.HttpProgress__Impl.UnsafeType arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.Foundation.Rect arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					global::Windows.Foundation.Rect arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					uint arg1, 
					void* arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType arg0, 
					void* arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					uint arg0, 
					global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType arg1)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::Windows.UI.Xaml.Markup.XmlnsDefinition__Impl.UnsafeType arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.TimeSpan arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					global::Windows.System.Threading.WorkItemOptions arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					int arg1, 
					global::System.Guid arg2, 
					ulong arg3, 
					global::System.Runtime.InteropServices.HSTRING arg4, 
					ulong arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					int arg1, 
					global::System.Guid arg2, 
					ulong arg3, 
					int arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					int arg1, 
					int arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.Runtime.InteropServices.HSTRING arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					global::System.IntPtr arg1, 
					uint arg2, 
					global::System.IntPtr arg3, 
					uint arg4, 
					void* arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.IntPtr arg0, 
					void* arg1, 
					global::System.IntPtr arg2, 
					uint arg3, 
					global::System.IntPtr arg4, 
					uint arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.IntPtr arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					void* arg1, 
					int arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					short arg2, 
					void* arg3, 
					global::System.IntPtr arg4, 
					global::System.IntPtr arg5, 
					void* arg6)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5, 
								arg6
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					void* arg1, 
					void* arg2, 
					void* arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					global::System.Runtime.InteropServices.ComTypes.INVOKEKIND__System_Private_Interop arg1, 
					global::System.IntPtr arg2, 
					global::System.IntPtr arg3, 
					global::System.IntPtr arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					int arg0, 
					global::System.Runtime.InteropServices.ComTypes.INVOKEKIND__System_Private_Interop arg1, 
					void* arg2)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static void ComCall__void__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					global::System.IntPtr arg0)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			global::McgInterop.Intrinsics.StdCall__void__(
								__pTarget, 
								__pThis, 
								arg0
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					short arg2, 
					void* arg3, 
					void* arg4, 
					void* arg5)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4, 
								arg5
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					void* arg2, 
					void* arg3)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__int__(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			return __result;
		}

		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int ComCall__HRESULT(
					global::System.__ComObject __this, 
					global::System.RuntimeTypeHandle __typeHnd, 
					int __targetIndex, 
					void* arg0, 
					int arg1, 
					void* arg2, 
					void* arg3, 
					void* arg4)
		{
			void* __pThis = ((void*)global::System.Runtime.InteropServices.McgModuleManager.GetInterface(
								__this, 
								__typeHnd
							));
			global::System.IntPtr __pTarget = (*(((global::System.IntPtr**)__pThis)))[__targetIndex];
			int __result = global::McgInterop.Intrinsics.StdCall__int__(
								__pTarget, 
								__pThis, 
								arg0, 
								arg1, 
								arg2, 
								arg3, 
								arg4
							);
			global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
			global::System.GC.KeepAlive(__this);
			if (__result < 0)
				global::McgInterop.McgHelpers.ThrowFailed(
									__result, 
									__typeHnd
								);
			return __result;
		}
	}

	internal unsafe static partial class ReverseComSharedStubs
	{
		// Signature, Windows.Foundation.IStringable.ToString, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Func_string__(
					object __this, 
					global::System.Runtime.InteropServices.HSTRING* unsafe_value__retval, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			if (unsafe_value__retval != null)
				(*(unsafe_value__retval)) = default(global::System.Runtime.InteropServices.HSTRING);
			string value__retval = default(string);
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::McgInterop.Intrinsics.HasThisCall__Func_string__(
									__this, 
									__methodPtr
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = global::System.Runtime.InteropServices.McgMarshal.StringToHString(value__retval);
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.FreeHString((*(unsafe_value__retval)).handle);
					(*(unsafe_value__retval)) = default(global::System.Runtime.InteropServices.HSTRING);
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Data.IValueConverter.Convert, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [rev] [in] [Mcg.CodeGen.WinRTTypeNameMarshaller] System_Type__Windows_UI_Xaml_Interop__TypeName, [rev] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [rev] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Func_object__Type__object__string__object__(
					object __this, 
					global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_value, 
					global::System.Type__Impl.UnsafeType unsafe_targetType, 
					global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_parameter, 
					global::System.Runtime.InteropServices.HSTRING unsafe_language, 
					global::System.Runtime.InteropServices.__vtable_IInspectable** unsafe_result__retval, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			object value = default(object);
			global::System.Type targetType;
			object parameter = default(object);
			string language = default(string);
			if (unsafe_result__retval != null)
				(*(unsafe_result__retval)) = null;
			object result__retval = default(object);
			try
			{
				// Marshalling
				value = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_value));
				targetType = global::System.Runtime.InteropServices.McgMarshal.TypeNameToType(
									unsafe_targetType.Name, 
									((int)unsafe_targetType.Kind)
								);
				parameter = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_parameter));
				language = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_language);
				// Call to managed method
				result__retval = global::McgInterop.Intrinsics.HasThisCall__Func_object__Type__object__string__object__(
									__this, 
									__methodPtr, 
									value, 
									targetType, 
									parameter, 
									language
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_result__retval != null)
					(*(unsafe_result__retval)) = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(result__retval);
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_result__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)(*(unsafe_result__retval)))));
					(*(unsafe_result__retval)) = null;
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.ApplicationInitializationCallback.Invoke, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Proc_TArg0__<TArg0>(
					object __this, 
					void* unsafe_p, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			TArg0 TArg0__arg = default(TArg0);
			try
			{
				// Marshalling
				TArg0__arg = (TArg0)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_p), 
									typeof(TArg0).TypeHandle
								);
				// Call to managed method
				global::McgInterop.Intrinsics.HasThisCall__Proc_TArg0__<TArg0>(
									__this, 
									__methodPtr, 
									TArg0__arg
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.PropertyChangedCallback.Invoke, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [GenericTypeMarshaller]  -> T, [rev] [in] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Proc_TArg0__TArg1__<TArg0, TArg1>(
					object __this, 
					void* unsafe_d, 
					void* unsafe_e, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			TArg0 TArg0__arg = default(TArg0);
			TArg1 TArg1__arg = default(TArg1);
			try
			{
				// Marshalling
				TArg0__arg = (TArg0)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_d), 
									typeof(TArg0).TypeHandle
								);
				TArg1__arg = (TArg1)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_e), 
									typeof(TArg1).TypeHandle
								);
				// Call to managed method
				global::McgInterop.Intrinsics.HasThisCall__Proc_TArg0__TArg1__<TArg0, TArg1>(
									__this, 
									__methodPtr, 
									TArg0__arg, 
									TArg1__arg
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Core.DispatchedHandler.Invoke, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Proc_(
					object __this, 
					global::System.IntPtr __methodPtr)
		{
			try
			{
				// Marshalling
				// Call to managed method
				global::McgInterop.Intrinsics.HasThisCall__Proc_(
									__this, 
									__methodPtr
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.UnhandledExceptionEventHandler.Invoke, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [rev] [in] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Proc_object__TArg0__<TArg0>(
					object __this, 
					global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_sender, 
					void* unsafe_e, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			object sender = default(object);
			TArg0 TArg0__arg = default(TArg0);
			try
			{
				// Marshalling
				sender = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_sender));
				TArg0__arg = (TArg0)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_e), 
									typeof(TArg0).TypeHandle
								);
				// Call to managed method
				global::McgInterop.Intrinsics.HasThisCall__Proc_object__TArg0__<TArg0>(
									__this, 
									__methodPtr, 
									sender, 
									TArg0__arg
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.Foundation.TypedEventHandler<Windows.UI.Xaml.FrameworkElement,System.Object>.Invoke, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [GenericTypeMarshaller]  -> T, [rev] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Proc_TArg0__object__<TArg0>(
					object __this, 
					void* unsafe_sender, 
					global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_args, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			TArg0 TArg0__arg = default(TArg0);
			object args = default(object);
			try
			{
				// Marshalling
				TArg0__arg = (TArg0)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_sender), 
									typeof(TArg0).TypeHandle
								);
				args = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_args));
				// Call to managed method
				global::McgInterop.Intrinsics.HasThisCall__Proc_TArg0__object__<TArg0>(
									__this, 
									__methodPtr, 
									TArg0__arg, 
									args
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.IFrameworkElementOverrides.MeasureOverride, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Size__Windows_Foundation__Size, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] Windows_Foundation_Size__Windows_Foundation__Size, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Func__Size___Size__(
					object __this, 
					global::Windows.Foundation.Size unsafe_availableSize, 
					global::Windows.Foundation.Size* unsafe_result__retval, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			global::Windows.Foundation.Size result__retval;
			try
			{
				// Marshalling
				// Call to managed method
				result__retval = global::McgInterop.Intrinsics.HasThisCall__Func__Size___Size__(
									__this, 
									__methodPtr, 
									unsafe_availableSize
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_result__retval != null)
					(*(unsafe_result__retval)) = result__retval;
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_result__retval != null)
					(*(unsafe_result__retval)) = default(global::Windows.Foundation.Size);
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.Storage.Streams.IRandomAccessStream.get_Size, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] ulong__unsigned __int64, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Func_ulong__(
					object __this, 
					ulong* unsafe_value__retval, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			ulong value__retval;
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::McgInterop.Intrinsics.HasThisCall__Func_ulong__(
									__this, 
									__methodPtr
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = value__retval;
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = 0;
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.Storage.Streams.IRandomAccessStream.put_Size, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.BlittableValueMarshaller] ulong__unsigned __int64, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Proc_ulong__(
					object __this, 
					ulong unsafe_value, 
					global::System.IntPtr __methodPtr)
		{
			try
			{
				// Marshalling
				// Call to managed method
				global::McgInterop.Intrinsics.HasThisCall__Proc_ulong__(
									__this, 
									__methodPtr, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.Storage.Streams.IRandomAccessStream.GetInputStreamAt, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.BlittableValueMarshaller] ulong__unsigned __int64, [rev] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Func_ulong__TResult__<TResult>(
					object __this, 
					ulong unsafe_position, 
					void** unsafe_stream__retval, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			if (unsafe_stream__retval != null)
				(*(unsafe_stream__retval)) = null;
			TResult TResult__retval = default(TResult);
			try
			{
				// Marshalling
				// Call to managed method
				TResult__retval = global::McgInterop.Intrinsics.HasThisCall__Func_ulong__TResult__<TResult>(
									__this, 
									__methodPtr, 
									unsafe_position
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_stream__retval != null)
					(*(unsafe_stream__retval)) = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										TResult__retval, 
										typeof(TResult).TypeHandle
									);
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_stream__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)(*(unsafe_stream__retval)))));
					(*(unsafe_stream__retval)) = null;
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.Storage.Streams.IRandomAccessStream.CloneStream, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Func_TResult__<TResult>(
					object __this, 
					void** unsafe_stream__retval, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			if (unsafe_stream__retval != null)
				(*(unsafe_stream__retval)) = null;
			TResult TResult__retval = default(TResult);
			try
			{
				// Marshalling
				// Call to managed method
				TResult__retval = global::McgInterop.Intrinsics.HasThisCall__Func_TResult__<TResult>(
									__this, 
									__methodPtr
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_stream__retval != null)
					(*(unsafe_stream__retval)) = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										TResult__retval, 
										typeof(TResult).TypeHandle
									);
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_stream__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)(*(unsafe_stream__retval)))));
					(*(unsafe_stream__retval)) = null;
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.Storage.Streams.IRandomAccessStream.get_CanRead, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.CBoolMarshaller] bool__bool, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Func_bool__(
					object __this, 
					sbyte* unsafe_value__retval, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			bool value__retval;
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::McgInterop.Intrinsics.HasThisCall__Func_bool__(
									__this, 
									__methodPtr
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = (value__retval ? ((sbyte)1) : ((sbyte)0));
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = 0;
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.Storage.Streams.IBuffer.get_Capacity, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Func_uint__(
					object __this, 
					uint* unsafe_value__retval, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			uint value__retval;
			try
			{
				// Marshalling
				// Call to managed method
				value__retval = global::McgInterop.Intrinsics.HasThisCall__Func_uint__(
									__this, 
									__methodPtr
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = value__retval;
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_value__retval != null)
					(*(unsafe_value__retval)) = 0;
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.Storage.Streams.IBuffer.put_Length, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Proc_uint__(
					object __this, 
					uint unsafe_value, 
					global::System.IntPtr __methodPtr)
		{
			try
			{
				// Marshalling
				// Call to managed method
				global::McgInterop.Intrinsics.HasThisCall__Proc_uint__(
									__this, 
									__methodPtr, 
									unsafe_value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.Foundation.AsyncOperationProgressHandler<Windows.Storage.Streams.IBuffer,uint>.Invoke, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [GenericTypeMarshaller]  -> T, [rev] [in] [Mcg.CodeGen.BlittableValueMarshaller] uint__unsigned int, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Proc_TArg0__uint__<TArg0>(
					object __this, 
					void* unsafe_asyncInfo, 
					uint unsafe_progressInfo, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			TArg0 TArg0__arg = default(TArg0);
			try
			{
				// Marshalling
				TArg0__arg = (TArg0)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_asyncInfo), 
									typeof(TArg0).TypeHandle
								);
				// Call to managed method
				global::McgInterop.Intrinsics.HasThisCall__Proc_TArg0__uint__<TArg0>(
									__this, 
									__methodPtr, 
									TArg0__arg, 
									unsafe_progressInfo
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.Foundation.AsyncOperationWithProgressCompletedHandler<Windows.Storage.Streams.IBuffer,uint>.Invoke, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [GenericTypeMarshaller]  -> T, [rev] [in] [Mcg.CodeGen.EnumMarshaller] Windows_Foundation_AsyncStatus__Windows_Foundation__AsyncStatus, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Proc_TArg0___AsyncStatus__<TArg0>(
					object __this, 
					void* unsafe_asyncInfo, 
					global::Windows.Foundation.AsyncStatus unsafe_asyncStatus, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			TArg0 TArg0__arg = default(TArg0);
			try
			{
				// Marshalling
				TArg0__arg = (TArg0)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_asyncInfo), 
									typeof(TArg0).TypeHandle
								);
				// Call to managed method
				global::McgInterop.Intrinsics.HasThisCall__Proc_TArg0___AsyncStatus__<TArg0>(
									__this, 
									__methodPtr, 
									TArg0__arg, 
									unsafe_asyncStatus
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlMetadataProvider.GetXamlType, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [rev] [out] [retval] [nativebyref] [GenericTypeMarshaller]  -> T, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Func_string__TResult__<TResult>(
					object __this, 
					global::System.Runtime.InteropServices.HSTRING unsafe_fullName, 
					void** unsafe_result__retval, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			string fullName = default(string);
			if (unsafe_result__retval != null)
				(*(unsafe_result__retval)) = null;
			TResult TResult__retval = default(TResult);
			try
			{
				// Marshalling
				fullName = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_fullName);
				// Call to managed method
				TResult__retval = global::McgInterop.Intrinsics.HasThisCall__Func_string__TResult__<TResult>(
									__this, 
									__methodPtr, 
									fullName
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_result__retval != null)
					(*(unsafe_result__retval)) = (void*)global::System.Runtime.InteropServices.McgModuleManager.ObjectToComInterface(
										TResult__retval, 
										typeof(TResult).TypeHandle
									);
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_result__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)(*(unsafe_result__retval)))));
					(*(unsafe_result__retval)) = null;
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.CreateFromString, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.HSTRINGMarshaller] string__System.Runtime.InteropServices.HSTRING, [rev] [out] [retval] [nativebyref] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Func_string__object__(
					object __this, 
					global::System.Runtime.InteropServices.HSTRING unsafe_value, 
					global::System.Runtime.InteropServices.__vtable_IInspectable** unsafe_result__retval, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			string value = default(string);
			if (unsafe_result__retval != null)
				(*(unsafe_result__retval)) = null;
			object result__retval = default(object);
			try
			{
				// Marshalling
				value = global::System.Runtime.InteropServices.McgMarshal.HStringToString(unsafe_value);
				// Call to managed method
				result__retval = global::McgInterop.Intrinsics.HasThisCall__Func_string__object__(
									__this, 
									__methodPtr, 
									value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				if (unsafe_result__retval != null)
					(*(unsafe_result__retval)) = (global::System.Runtime.InteropServices.__vtable_IInspectable*)global::System.Runtime.InteropServices.McgMarshal.ObjectToIInspectable(result__retval);
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionCleanup
				if (unsafe_result__retval != null)
				{
					global::System.Runtime.InteropServices.McgMarshal.ComSafeRelease(new global::System.IntPtr(((void*)(*(unsafe_result__retval)))));
					(*(unsafe_result__retval)) = null;
				}
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.UI.Xaml.Markup.IXamlType.AddToVector, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, [rev] [in] [Mcg.CodeGen.WinRTInspectableMarshaller] object____mcg_IInspectable, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Proc_object__object__(
					object __this, 
					global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_instance, 
					global::System.Runtime.InteropServices.__vtable_IInspectable* unsafe_value, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			object instance = default(object);
			object value = default(object);
			try
			{
				// Marshalling
				instance = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_instance));
				value = global::System.Runtime.InteropServices.McgMarshal.IInspectableToObject(((global::System.IntPtr)unsafe_value));
				// Call to managed method
				global::McgInterop.Intrinsics.HasThisCall__Proc_object__object__(
									__this, 
									__methodPtr, 
									instance, 
									value
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}

		// Signature, Windows.Foundation.AsyncOperationProgressHandler<Windows.Storage.Streams.IInputStream,ulong>.Invoke, [rev] [return] [Mcg.CodeGen.ComHRESULTReturnMarshaller] void__int, [rev] [in] [GenericTypeMarshaller]  -> T, [rev] [in] [Mcg.CodeGen.BlittableValueMarshaller] ulong__unsigned __int64, 
		[global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.NoInlining)]
		[global::System.Runtime.InteropServices.McgGeneratedMarshallingCode]
		internal static int Proc_TArg0__ulong__<TArg0>(
					object __this, 
					void* unsafe_asyncInfo, 
					ulong unsafe_progressInfo, 
					global::System.IntPtr __methodPtr)
		{
			// Setup
			TArg0 TArg0__arg = default(TArg0);
			try
			{
				// Marshalling
				TArg0__arg = (TArg0)global::System.Runtime.InteropServices.McgModuleManager.ComInterfaceToObject(
									((global::System.IntPtr)unsafe_asyncInfo), 
									typeof(TArg0).TypeHandle
								);
				// Call to managed method
				global::McgInterop.Intrinsics.HasThisCall__Proc_TArg0__ulong__<TArg0>(
									__this, 
									__methodPtr, 
									TArg0__arg, 
									unsafe_progressInfo
								);
				global::System.Runtime.InteropServices.DebugAnnotations.PreviousCallContainsUserCode();
				// Return
				return global::McgInterop.Helpers.S_OK;
			}
			catch (global::System.Exception hrExcep)
			{
				// ExceptionReturn
				return global::System.Runtime.InteropServices.McgMarshal.GetHRForExceptionWinRT(hrExcep);
			}
		}
	}
}

